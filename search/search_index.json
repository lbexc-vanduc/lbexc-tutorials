{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"LBExC Guided Tutorials Welcome to LBExC Tutorials. Here you will find a progression of hands on demonstrations and useful stand-alone examples designed to assist users in learning and writing their own LBExC code.","title":"LBExC Guided Tutorials"},{"location":"#lbexc-guided-tutorials","text":"Welcome to LBExC Tutorials. Here you will find a progression of hands on demonstrations and useful stand-alone examples designed to assist users in learning and writing their own LBExC code.","title":"LBExC Guided Tutorials"},{"location":"makefile/","text":"Welcome to Makefiles","title":"Makefile"},{"location":"makefile/#welcome-to-makefiles","text":"","title":"Welcome to Makefiles"},{"location":"mkdocs/","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"MkDocs"},{"location":"mkdocs/#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"mkdocs/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"mkdocs/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"submit-job/","text":"This section describes how to submit job on Slurm #SBATCH --job-name=JOB-NAME - Name of the job. #SBATCH --time=4:00:00 # format days-hh:mm:ss - Computing time limit. #SBATCH --ntasks=2 - we use 2 nodes for MPI data distribution. #SBATCH --cpus-per-task=16 - request 16 cores each node. export OMP_NUM_THREADS=16 - use 16 threads for OpenMP parallelism on one node mpirun ./exe-name - run program with mpirun So, we have following syntaxes #!/bin/bash #SBATCH --job-name=JOB-NAME #SBATCH -p debug_queue #SBATCH --time=4:00:00 # format days-hh:mm:ss #SBATCH --cpus-per-task=16 #SBATCH --ntasks=2 export OMP_NUM_THREADS=16 echo \"Used nodes:\" $SLURM_NODELIST mpirun ./exe-name","title":"Submit Jobs"},{"location":"submit-job/#this-section-describes-how-to-submit-job-on-slurm","text":"#SBATCH --job-name=JOB-NAME - Name of the job. #SBATCH --time=4:00:00 # format days-hh:mm:ss - Computing time limit. #SBATCH --ntasks=2 - we use 2 nodes for MPI data distribution. #SBATCH --cpus-per-task=16 - request 16 cores each node. export OMP_NUM_THREADS=16 - use 16 threads for OpenMP parallelism on one node mpirun ./exe-name - run program with mpirun So, we have following syntaxes #!/bin/bash #SBATCH --job-name=JOB-NAME #SBATCH -p debug_queue #SBATCH --time=4:00:00 # format days-hh:mm:ss #SBATCH --cpus-per-task=16 #SBATCH --ntasks=2 export OMP_NUM_THREADS=16 echo \"Used nodes:\" $SLURM_NODELIST mpirun ./exe-name","title":"This section describes how to submit job on Slurm"}]}